[{"updatedAt":"2025-10-28T07:44:14.903Z","createdAt":"2025-10-28T07:41:49.348Z","id":"uOnstAnelzIbHcEp","name":"Analyze Student Emotion","active":true,"isArchived":false,"nodes":[{"parameters":{"httpMethod":"POST","path":"analyze-emotion","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2.1,"position":[0,0],"id":"e3ca6e62-ab12-4e75-9dc4-f07fa77b448f","name":"Webhook","webhookId":"cbd38a24-e014-403d-9664-db37ca3d02fa"},{"parameters":{"method":"POST","url":"http://ollama:11434/api/generate","sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"model\": \"gemma2:2b\",\n  \"prompt\": \"Eres un psicólogo educativo experto en análisis emocional de estudiantes.\\n\\nAnaliza la siguiente respuesta de un estudiante peruano y determina su estado emocional.\\n\\nRespuesta del estudiante:\\n={{ $json.body.text }}\\n\\nCalificación obtenida: ={{ $json.body.grade }}/100\\n\\nResponde SOLAMENTE con este formato:\\nEMOCIÓN: [POSITIVO/NEUTRAL/NEGATIVO]\\nENGAGEMENT: [0.0 a 1.0]\\nRAZÓN: [breve explicación en una línea]\",\n  \"stream\": false,\n  \"options\": {\n    \"num_predict\": 200,\n    \"temperature\": 0.3\n  }\n}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.3,"position":[208,0],"id":"60656a6e-cb4f-4a83-93ea-2d2235616d72","name":"HTTP Request"},{"parameters":{"jsCode":"// Obtener respuesta de Ollama\nconst ollamaResponse = $input.first().json;\nconst content = ollamaResponse.response;\n\n// Parsear emoción\nlet emotion = 'NEUTRAL';\nconst emotionMatch = content.match(/EMOCIÓN:\\s*(POSITIVO|NEUTRAL|NEGATIVO)/i);\nif (emotionMatch) {\n  emotion = emotionMatch[1].toUpperCase();\n}\n\n// Parsear engagement\nlet engagement = 0.5;\nconst engagementMatch = content.match(/ENGAGEMENT:\\s*([\\d.]+)/i);\nif (engagementMatch) {\n  engagement = Number.parseFloat(engagementMatch[1]);\n  // Asegurar que está entre 0 y 1\n  engagement = Math.max(0, Math.min(1, engagement));\n}\n\n// Extraer razón\nlet reason = '';\nconst reasonMatch = content.match(/RAZÓN:\\s*(.+)/i);\nif (reasonMatch) {\n  reason = reasonMatch[1].trim();\n}\n\n// Retornar respuesta estructurada\nreturn {\n  json: {\n    emotion: emotion,\n    engagement: engagement,\n    reason: reason,\n    timestamp: new Date().toISOString()\n  }\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[416,0],"id":"4b7a3ca4-1d48-4bc8-befd-594276813503","name":"Code in JavaScript"},{"parameters":{"options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.4,"position":[624,0],"id":"0396a873-6d79-413f-a9b5-c1f2a3d74e67","name":"Respond to Webhook"}],"connections":{"Webhook":{"main":[[{"node":"HTTP Request","type":"main","index":0}]]},"HTTP Request":{"main":[[{"node":"Code in JavaScript","type":"main","index":0}]]},"Code in JavaScript":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"6a66e88a-7f52-4f1d-a6f6-ce50e33f902a","triggerCount":1,"tags":[],"shared":[{"updatedAt":"2025-10-28T07:41:49.348Z","createdAt":"2025-10-28T07:41:49.348Z","role":"workflow:owner","workflowId":"uOnstAnelzIbHcEp","projectId":"zKUMyuq47NXmKr1F","project":{"updatedAt":"2025-10-28T04:33:03.530Z","createdAt":"2025-10-28T00:56:09.117Z","id":"zKUMyuq47NXmKr1F","name":"JOSHEP ANTONY Ccahuana <joshep.antony.cc.l@gmail.com>","type":"personal","icon":null,"description":null}}]},{"updatedAt":"2025-10-28T07:31:08.129Z","createdAt":"2025-10-28T04:33:50.805Z","id":"sLcbQX1bnXeEXHxN","name":"Generate Educational Content","active":true,"isArchived":false,"nodes":[{"parameters":{"httpMethod":"POST","path":"generate-content","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2.1,"position":[0,0],"id":"daa8ec1f-7b97-4dc9-a1f9-c5ad37d930c0","name":"Webhook","webhookId":"7f0ac4ad-7a68-46db-87c8-3a77cfc4de9c"},{"parameters":{"options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.4,"position":[592,0],"id":"f8a4dca7-4393-49d0-8245-c155e37a5d81","name":"Respond to Webhook"},{"parameters":{"method":"POST","url":"http://ollama:11434/api/generate","sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"model\": \"gemma2:2b\",\n  \"prompt\": \"Eres un asistente educativo especializado en crear contenido gamificado para estudiantes peruanos.\\n\\nTarea: Genera contenido educativo sobre el tema que te proporcione el usuario.\\n\\nDebes crear:\\n1. EXACTAMENTE 8 FLASHCARDS (pregunta-respuesta)\\n2. EXACTAMENTE 6 PARES para juego de memoria (conceptos relacionados)\\n3. EXACTAMENTE 8 RELACIONES (4 correctas, 4 incorrectas)\\n4. EXACTAMENTE 7 PREGUNTAS de quiz con múltiple opción\\n\\nFormato de respuesta (IMPORTANTE: Responde SOLO con este formato):\\n\\n### FLASHCARDS\\n1. P: [pregunta] | R: [respuesta]\\n2. P: [pregunta] | R: [respuesta]\\n...\\n\\n### MEMORIA\\n1. [concepto1] <-> [concepto2]\\n2. [concepto1] <-> [concepto2]\\n...\\n\\n### RELACIONES\\nCORRECTAS:\\n1. [item1] = [item2]\\n2. [item1] = [item2]\\nINCORRECTAS:\\n1. [item1] ≠ [item2]\\n2. [item1] ≠ [item2]\\n...\\n\\n### QUIZ\\n1. [pregunta]\\nA) [opción]\\nB) [opción]\\nC) [opción]\\nD) [opción]\\nRespuesta: [A/B/C/D]\\n...\\n\\nTEMA A DESARROLLAR:\\n={{ $json.body.prompt }}\",\n  \"stream\": false,\n  \"options\": {\n    \"num_predict\": 3500,\n    \"temperature\": 0.7\n  }\n}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.3,"position":[208,0],"id":"c6259f8b-6aa8-4a5f-a030-8e2a95559dce","name":"HTTP Request"},{"parameters":{"jsCode":"// Obtener la respuesta de Ollama\nconst ollamaResponse = $input.first().json;\nconst content = ollamaResponse.response;\n\n// Función auxiliar para extraer secciones\nfunction extractSection(text, startMarker, endMarker) {\n  const start = text.indexOf(startMarker);\n  if (start === -1) return '';\n  const afterStart = start + startMarker.length;\n  const end = endMarker ? text.indexOf(endMarker, afterStart) : text.length;\n  return text.substring(afterStart, end !== -1 ? end : text.length).trim();\n}\n\n// 1. PARSEAR FLASHCARDS\nconst flashcardsSection = extractSection(content, '### FLASHCARDS', '### MEMORIA');\nconst flashcards = [];\nconst flashcardLines = flashcardsSection.split('\\n').filter(line => line.match(/^\\d+\\./));\n\nfor (const line of flashcardLines) {\n  const match = line.match(/P:\\s*(.+?)\\s*\\|\\s*R:\\s*(.+)/);\n  if (match) {\n    flashcards.push({\n      question: match[1].trim(),\n      answer: match[2].trim()\n    });\n  }\n}\n\n// 2. PARSEAR MEMORIA\nconst memoriaSection = extractSection(content, '### MEMORIA', '### RELACIONES');\nconst cardsMemory = [];\nconst memoriaLines = memoriaSection.split('\\n').filter(line => line.match(/^\\d+\\./));\n\nfor (const line of memoriaLines) {\n  const parts = line.replace(/^\\d+\\.\\s*/, '').split('<->');\n  if (parts.length === 2) {\n    cardsMemory.push({\n      card1: parts[0].trim(),\n      card2: parts[1].trim(),\n      isMatched: true\n    });\n  }\n}\n\n// 3. PARSEAR RELACIONES\nconst relacionesSection = extractSection(content, '### RELACIONES', '### QUIZ');\nconst playRelations = [];\n\n// Parsear todas las líneas numeradas\nconst relacionesLines = relacionesSection.split('\\n');\nlet isCorrect = false;\n\nfor (const line of relacionesLines) {\n  if (line.includes('CORRECTAS:')) {\n    isCorrect = true;\n    continue;\n  }\n  if (line.includes('INCORRECTAS:')) {\n    isCorrect = false;\n    continue;\n  }\n  \n  if (line.match(/^\\d+\\./)) {\n    const parts = line.replace(/^\\d+\\.\\s*/, '').split('=');\n    if (parts.length === 2) {\n      playRelations.push({\n        item1: parts[0].trim(),\n        item2: parts[1].trim(),\n        isRelated: isCorrect\n      });\n    }\n  }\n}\n\n// 4. PARSEAR QUIZ\nconst quizSection = extractSection(content, '### QUIZ', null);\nconst quiz = [];\n\n// Dividir por líneas que empiezan con número\nconst quizBlocks = quizSection.split(/\\n(?=\\d+\\.)/);\n\nfor (const block of quizBlocks) {\n  if (!block.trim()) continue;\n  \n  const lines = block.split('\\n');\n  if (lines.length < 2) continue;\n  \n  // Extraer pregunta (primera línea)\n  const questionLine = lines[0].replace(/^\\d+\\.\\s*/, '').trim();\n  \n  // Extraer opciones de la segunda línea\n  const optionsLine = lines[1];\n  const optionMatches = optionsLine.match(/A\\)\\s*([^B]+)\\s*B\\)\\s*([^C]+)\\s*C\\)\\s*([^D]+)\\s*D\\)\\s*(.+?)(?:\\s*\\(|$)/);\n  \n  // Buscar respuesta\n  let correctOption = 'A';\n  const respuestaMatch = block.match(/Respuesta:\\s*([A-D])\\)/);\n  if (respuestaMatch) {\n    correctOption = respuestaMatch[1];\n  }\n  \n  if (optionMatches) {\n    quiz.push({\n      question: questionLine,\n      optionA: optionMatches[1].trim(),\n      optionB: optionMatches[2].trim(),\n      optionC: optionMatches[3].trim(),\n      optionD: optionMatches[4].trim(),\n      correctOption: correctOption\n    });\n  }\n}\n\n// DEVOLVER RESPUESTA ESTRUCTURADA\nreturn {\n  json: {\n    flashcards: flashcards.slice(0, 8),\n    cardsMemory: cardsMemory.slice(0, 6),\n    playRelations: playRelations.slice(0, 8),\n    quiz: quiz.slice(0, 7),\n    metadata: {\n      model: \"phi3\",\n      timestamp: new Date().toISOString(),\n      counts: {\n        flashcards: flashcards.length,\n        cardsMemory: cardsMemory.length,\n        playRelations: playRelations.length,\n        quiz: quiz.length\n      }\n    }\n  }\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[416,0],"id":"4925edbf-eb34-44fc-a5f3-0de5e4b61006","name":"Code in JavaScript"}],"connections":{"Webhook":{"main":[[{"node":"HTTP Request","type":"main","index":0}]]},"HTTP Request":{"main":[[{"node":"Code in JavaScript","type":"main","index":0}]]},"Code in JavaScript":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"899e529f-df09-438a-992f-dbaed9381ae1","triggerCount":1,"tags":[],"shared":[{"updatedAt":"2025-10-28T04:33:50.805Z","createdAt":"2025-10-28T04:33:50.805Z","role":"workflow:owner","workflowId":"sLcbQX1bnXeEXHxN","projectId":"zKUMyuq47NXmKr1F","project":{"updatedAt":"2025-10-28T04:33:03.530Z","createdAt":"2025-10-28T00:56:09.117Z","id":"zKUMyuq47NXmKr1F","name":"JOSHEP ANTONY Ccahuana <joshep.antony.cc.l@gmail.com>","type":"personal","icon":null,"description":null}}]},{"updatedAt":"2025-10-28T14:33:16.444Z","createdAt":"2025-10-28T07:48:44.700Z","id":"ylqbQtiluXBGWHAk","name":"Student Chat Conversation","active":true,"isArchived":false,"nodes":[{"parameters":{"httpMethod":"POST","path":"chat","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2.1,"position":[0,0],"id":"51bd2e30-7c86-449c-aff9-773126f3db99","name":"Webhook","webhookId":"1a0eadb5-2970-4019-b73c-3a1f71d6f3bb"},{"parameters":{"method":"POST","url":"http://ollama:11434/api/generate","sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"model\": \"gemma2:2b\",\n  \"prompt\": \"Eres un asistente educativo amigable y motivador. Tu objetivo es introducir al estudiante a una nueva actividad de aprendizaje de forma breve y entusiasta.\\n\\nCONTEXTO DE LA ACTIVIDAD:\\n- Curso: {{ $json.body.courseName }}\\n- Actividad: {{ $json.body.activityTitle }}\\n- Descripción: {{ $json.body.activityDescription }}\\n\\nCONVERSACIÓN PREVIA:\\n{{ $json.body.conversationHistory.map(m => `${m.role}: ${m.text}`).join('\\\\n') }}\\n\\nMENSAJE DEL ESTUDIANTE:\\n{{ $json.body.studentMessage }}\\n\\nINSTRUCCIONES:\\n- Responde de forma breve (máximo 2-3 oraciones)\\n- Sé motivador y cercano\\n- Conecta con los intereses del estudiante\\n- Si es el primer mensaje, da la bienvenida\\n- Si pregunta algo específico, responde directamente\\n- Anima al estudiante a comenzar la actividad\\n\\nRESPUESTA:\",\n  \"stream\": false,\n  \"options\": {\n    \"num_predict\": 150,\n    \"temperature\": 0.8\n  }\n}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.3,"position":[208,0],"id":"57ea0efa-3c6a-4aa8-988a-94635431f8fe","name":"HTTP Request"},{"parameters":{"jsCode":"// Extraer la respuesta de Ollama\nconst ollamaResponse = $input.item.json.response;\n\n// Limpiar la respuesta (eliminar saltos de línea innecesarios)\nlet botResponse = ollamaResponse\n  .replace(/\\n+/g, ' ')\n  .trim();\n\n// Limitar longitud máxima (por seguridad)\nif (botResponse.length > 300) {\n  botResponse = botResponse.substring(0, 297) + '...';\n}\n\nreturn {\n  botResponse: botResponse\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[416,0],"id":"ffb3dec3-133e-45a3-9513-becc88f379e5","name":"Code in JavaScript"},{"parameters":{"options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.4,"position":[624,0],"id":"a913f58c-de87-4281-a0ae-6c7328451599","name":"Respond to Webhook"}],"connections":{"Webhook":{"main":[[{"node":"HTTP Request","type":"main","index":0}]]},"HTTP Request":{"main":[[{"node":"Code in JavaScript","type":"main","index":0}]]},"Code in JavaScript":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"a413380e-5b13-48cf-9ad7-dddcc732465e","triggerCount":1,"tags":[],"shared":[{"updatedAt":"2025-10-28T07:48:44.700Z","createdAt":"2025-10-28T07:48:44.700Z","role":"workflow:owner","workflowId":"ylqbQtiluXBGWHAk","projectId":"zKUMyuq47NXmKr1F","project":{"updatedAt":"2025-10-28T04:33:03.530Z","createdAt":"2025-10-28T00:56:09.117Z","id":"zKUMyuq47NXmKr1F","name":"JOSHEP ANTONY Ccahuana <joshep.antony.cc.l@gmail.com>","type":"personal","icon":null,"description":null}}]}]